import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashSet;
import java.util.Set;
 
import org.eclipse.jdt.core.dom.AST;
import org.eclipse.jdt.core.dom.ASTParser;
import org.eclipse.jdt.core.dom.ASTVisitor;
import org.eclipse.jdt.core.dom.CompilationUnit;
import org.eclipse.jdt.core.dom.MethodDeclaration;
import org.eclipse.jdt.core.dom.SimpleName;
import org.eclipse.jdt.core.dom.VariableDeclarationFragment;
 
public class ASTReader {
 
	static Set<String> names = new HashSet<String>();
	//use ASTParse to parse string
	public static Set<String> parse(String str) {
		ASTParser parser = ASTParser.newParser(AST.JLS3);
		parser.setSource(str.toCharArray());
		parser.setKind(ASTParser.K_COMPILATION_UNIT);
 
		final CompilationUnit cu = (CompilationUnit) parser.createAST(null);
		
		cu.accept(new ASTVisitor() {
 
			
 
			public boolean visit(VariableDeclarationFragment node) {
				SimpleName name = node.getName();
				names.add(name.getIdentifier().toString());
				//System.out.println(name.toString());
				return false; // do not continue 
			}
 
			public boolean visit(MethodDeclaration node) {
				SimpleName name1 = node.getName();
			    names.add(name1.getIdentifier().toString()+"()");
			   // System.out.println(name1.toString()+"()");
			    return super.visit(node);
			  }
		});
		return names;
	}
 
	//read file content into a string
	public static String readFileToString(String filePath) throws IOException {
		StringBuilder fileData = new StringBuilder(1000);
		BufferedReader reader = new BufferedReader(new FileReader(filePath));
 
		char[] buf = new char[10];
		int numRead = 0;
		while ((numRead = reader.read(buf)) != -1) {
			//System.out.println(numRead);
			String readData = String.valueOf(buf, 0, numRead);
			fileData.append(readData);
			buf = new char[1024];
		}
 
		reader.close();
 
		return  fileData.toString();	
	}
 
	
 
	public static void main(String[] args) throws IOException {
		 parse(readFileToString("C:\\Users\\raj\\Desktop\\new\\GitJavaClassnameExtractor.java"));
		 for(String s:names){
			 System.out.println(s);
		 }
	}
}